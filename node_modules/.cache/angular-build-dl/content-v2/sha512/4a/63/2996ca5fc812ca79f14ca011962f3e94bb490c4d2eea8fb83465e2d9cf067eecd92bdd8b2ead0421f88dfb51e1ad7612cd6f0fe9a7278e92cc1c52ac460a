{"version":3,"sources":["src/app/pages/student-details/student-details.page.html","src/app/pages/student-details/student-details-routing.module.ts","src/app/pages/student-details/student-details.module.ts","src/app/pages/student-details/student-details.page.scss","src/app/pages/student-details/student-details.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,wuEAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,kDAAA,CAAA,oBAAA;AAFb,KADqB,CAAvB;;AAWA,QAAa,+BAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,+BAA+B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ3C,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAI2C,CAAA,EAA/B,+BAA+B,CAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAa,wBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,wBAAwB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CATpC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,4DAAA,CAAA,iCAAA,CAJO,CADD;AAOR,MAAA,YAAY,EAAE,CAAC,kDAAA,CAAA,oBAAA,CAAD;AAPN,KAAT,CASoC,CAAA,EAAxB,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACnBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAa,kBAAb;AAWE,kCAAoB,cAApB,EAA4D,cAA5D,EACU,SADV,EAC8C,MAD9C,EAC4D;AAAA;;AADxC,aAAA,cAAA,GAAA,cAAA;AAAwC,aAAA,cAAA,GAAA,cAAA;AAClD,aAAA,SAAA,GAAA,SAAA;AAAoC,aAAA,MAAA,GAAA,MAAA,CAAc,CAX5D;AACA;;AACA,aAAA,OAAA,GAAmB;AACjB,UAAA,SAAS,EAAE,EADM;AAEjB,UAAA,QAAQ,EAAE,EAFO;AAGjB,UAAA,SAAS,EAAE,EAHM;AAIjB,UAAA,SAAS,EAAE,EAJM;AAKjB,UAAA,QAAQ,EAAE;AALO,SAAnB;AASiE;;AAZnE;AAAA;AAAA,mCAcU,CAAM;AAdhB;AAAA;AAAA,2CAgBkB;AAAA;;AACd,cAAI,SAAS,GAAG,KAAK,cAAL,CAAoB,QAApB,CAA6B,QAA7B,CAAsC,GAAtC,CAA0C,WAA1C,CAAhB;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;;AACA,cAAI,SAAJ,EAAe;AACb,YAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;AACA,iBAAK,cAAL,CAAoB,UAApB,CAA+B,SAA/B,EAA0C,SAA1C,CAAoD,UAAA,OAAO,EAAG;AAC5D,cAAA,KAAI,CAAC,OAAL,GAAe,OAAf;AACD,aAFD;AAGD;AACF;AAzBH;AAAA;AAAA,qCA2BY;AAAA;;AACR,eAAK,cAAL,CAAoB,UAApB,CAA+B,KAAK,OAApC,EAA6C,IAA7C,CAAkD,YAAK;AACrD,YAAA,MAAI,CAAC,MAAL,CAAY,aAAZ,CAA0B,GAA1B;;AACA,YAAA,MAAI,CAAC,SAAL,CAAe,eAAf;AACD,WAHD,EAGG,UAAA,GAAG,EAAG;AACP,YAAA,MAAI,CAAC,SAAL,CAAe,4CAAf;AACD,WALD;AAMD;AAlCH;AAAA;AAAA,wCAoCe;AAAA;;AACX,eAAK,cAAL,CAAoB,aAApB,CAAkC,KAAK,OAAL,CAAa,SAA/C,EAA0D,IAA1D,CAA+D,YAAK;AAClE,YAAA,MAAI,CAAC,MAAL,CAAY,aAAZ,CAA0B,GAA1B;;AACA,YAAA,MAAI,CAAC,SAAL,CAAe,iBAAf;AACD,WAHD,EAGG,UAAA,GAAG,EAAG;AACP,YAAA,MAAI,CAAC,SAAL,CAAe,8CAAf;AACD,WALD;AAMD;AA3CH;AAAA;AAAA,wCA6Ce;AAAA;;AACX,eAAK,cAAL,CAAoB,aAApB,CAAkC,KAAK,OAAvC,EAAgD,IAAhD,CAAqD,YAAK;AACxD,YAAA,MAAI,CAAC,SAAL,CAAe,iBAAf;AACD,WAFD,EAEG,UAAA,GAAG,EAAG;AACP,YAAA,MAAI,CAAC,SAAL,CAAe,8CAAf;AACD,WAJD;AAKD;AAnDH;AAAA;AAAA,kCAqDY,GArDZ,EAqDe;AACX,eAAK,SAAL,CAAe,MAAf,CAAsB;AACpB,YAAA,OAAO,EAAE,GADW;AAEpB,YAAA,QAAQ,EAAE;AAFU,WAAtB,EAGG,IAHH,CAGQ,UAAA,KAAK;AAAA,mBAAI,KAAK,CAAC,OAAN,EAAJ;AAAA,WAHb;AAID;AA1DH;;AAAA;AAAA,OAAA;;;;cAWsC,4CAAA,CAAA,gBAAA;;cAAwC,6DAAA,CAAA,gBAAA;;cACvD,2CAAA,CAAA,iBAAA;;cAAiC,4CAAA,CAAA,QAAA;;;;AAZ3C,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,qBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,uGAAA,CAAA,YAFS;;;;AAAA,KAAV,CAK8B,E,uEAWO,4CAAA,CAAA,gBAAA,C,EAAwC,6DAAA,CAAA,gBAAA,C,EACvD,2CAAA,CAAA,iBAAA,C,EAAiC,4CAAA,CAAA,QAAA,C,EAZzB,CAAA,EAAlB,kBAAkB,CAAlB","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Student Details</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">First Name</ion-label>\\n    <ion-input [(ngModel)]=\\\"student.firstName\\\"></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">Last Name</ion-label>\\n    <ion-textarea [(ngModel)]=\\\"student.lastName\\\" rows=\\\"2\\\"></ion-textarea>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">Module No1</ion-label>\\n    <ion-textarea [(ngModel)]=\\\"student.moduleNo1\\\" rows=\\\"2\\\"></ion-textarea>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">Module No2</ion-label>\\n    <ion-textarea [(ngModel)]=\\\"student.moduleNo2\\\" rows=\\\"2\\\"></ion-textarea>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">Course ID</ion-label>\\n    <ion-textarea [(ngModel)]=\\\"student.courseID\\\" rows=\\\"2\\\"></ion-textarea>\\n  </ion-item>\\n</ion-content>\\n <!-- Only show Add Student button if no student ID\\n has been passed, otherwise its being used to update/delete -->\\n<ion-footer *ngIf=\\\"!student.studentID\\\">\\n  <ion-toolbar color=\\\"success\\\">\\n    <ion-button expand=\\\"full\\\" fill=\\\"clear\\\" color=\\\"light\\\" (click)=\\\"addStudent()\\\">\\n      <ion-icon name=\\\"checkmark\\\" slot=\\\"start\\\"></ion-icon>\\n      Add Student\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n <!-- Show these buttons if a studentID has been passed with the router. If there \\n is a studentID it means that the page is being used to update/delete a student -->\\n<ion-footer *ngIf=\\\"student.studentID\\\">\\n  <ion-row no-padding text-center>\\n    <ion-col size=\\\"6\\\">\\n      <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" color=\\\"danger\\\" (click)=\\\"deleteStudent()\\\">\\n        <ion-icon name=\\\"trash\\\" slot=\\\"start\\\"></ion-icon>\\n        Delete\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"6\\\">\\n      <ion-button expand=\\\"block\\\" fill=\\\"solid\\\" color=\\\"success\\\" (click)=\\\"updateStudent()\\\">\\n        <ion-icon name=\\\"save\\\" slot=\\\"start\\\"></ion-icon>\\n        Update\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StudentDetailsPage } from './student-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StudentDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StudentDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StudentDetailsPageRoutingModule } from './student-details-routing.module';\n\nimport { StudentDetailsPage } from './student-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StudentDetailsPageRoutingModule\n  ],\n  declarations: [StudentDetailsPage]\n})\nexport class StudentDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3N0dWRlbnQtZGV0YWlscy9zdHVkZW50LWRldGFpbHMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { StudentService, Student } from 'src/app/services/student.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController} from '@ionic/angular';\n\n@Component({\n  selector: 'app-student-details',\n  templateUrl: './student-details.page.html',\n  styleUrls: ['./student-details.page.scss'],\n})\nexport class StudentDetailsPage implements OnInit {\n  // Create empty student object to provide\n  // functions with data from the form\n  student: Student = {\n    firstName: '',\n    lastName: '',\n    moduleNo1: '',\n    moduleNo2: '',\n    courseID: ''\n  };\n \n  constructor(private activatedRoute: ActivatedRoute, private studentService: StudentService,\n    private toastCtrl: ToastController, private router: Router) { }\n \n  ngOnInit() { }\n \n  ionViewWillEnter() {\n    let studentID = this.activatedRoute.snapshot.paramMap.get('studentID');\n    console.log(studentID);\n    if (studentID) {\n      console.log(studentID);\n      this.studentService.getStudent(studentID).subscribe(student => {\n        this.student = student;\n      });\n    }\n  }\n \n  addStudent() {\n    this.studentService.addStudent(this.student).then(() => {\n      this.router.navigateByUrl('/');\n      this.showToast('Student added');\n    }, err => {\n      this.showToast('There was a problem adding your student :(');\n    });\n  }\n \n  deleteStudent() {\n    this.studentService.deleteStudent(this.student.studentID).then(() => {\n      this.router.navigateByUrl('/');\n      this.showToast('Student deleted');\n    }, err => {\n      this.showToast('There was a problem deleting your student :(');\n    });\n  }\n \n  updateStudent() {\n    this.studentService.updateStudent(this.student).then(() => {\n      this.showToast('Student updated');\n    }, err => {\n      this.showToast('There was a problem updating your student :(');\n    });\n  }\n \n  showToast(msg) {\n    this.toastCtrl.create({\n      message: msg,\n      duration: 2000\n    }).then(toast => toast.present());\n  }\n}"],"sourceRoot":"webpack:///","file":"pages-student-details-student-details-module-es5.js"}