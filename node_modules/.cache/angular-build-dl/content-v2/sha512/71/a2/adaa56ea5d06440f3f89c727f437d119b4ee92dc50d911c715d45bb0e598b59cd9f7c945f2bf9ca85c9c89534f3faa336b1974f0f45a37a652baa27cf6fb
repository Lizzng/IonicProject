{"version":3,"sources":["./src/app/pages/student-login/student-login.page.html","./src/app/pages/student-login/student-login-routing.module.ts","./src/app/pages/student-login/student-login.module.ts","./src/app/pages/student-login/student-login.page.scss","./src/app/pages/student-login/student-login.page.ts"],"names":[],"mappings":"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","file":"pages-student-login-student-login-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <!-- <ion-back-button defaultHref=\\\"/\\\"></ion-back-button> -->\\n    </ion-buttons>\\n    <ion-title>Sign in</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content class=\\\"ion-padding\\\">\\n \\n  <form [formGroup]=\\\"credentialForm\\\">\\n    <ion-item>\\n      <ion-input placeholder=\\\"Email address\\\" \\n      formControlName=\\\"email\\\" autofocus=\\\"true\\\" clearInput=\\\"true\\\"></ion-input>\\n    </ion-item>\\n \\n    <div *ngIf=\\\"(email.dirty || email.touched) && email.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"email.errors?.required\\\">Email is required</span>\\n      <span *ngIf=\\\"email.errors?.email\\\">Email is invalid</span>\\n    </div>\\n \\n    <ion-item>\\n      <ion-input placeholder=\\\"Password\\\" type=\\\"password\\\" \\n      formControlName=\\\"password\\\" clearInput=\\\"true\\\"></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(password.dirty || password.touched) && password.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"password.errors?.required\\\">Password is required</span>\\n      <span *ngIf=\\\"password.errors?.minlength\\\">Password needs to be 6 characters</span>\\n    </div>\\n  </form>\\n \\n  <ion-button (click)=\\\"signUp()\\\" expand=\\\"full\\\">Sign up</ion-button>\\n  <ion-button (click)=\\\"signIn()\\\" expand=\\\"full\\\" color=\\\"secondary\\\">Sign in</ion-button>\\n \\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StudentLoginPage } from './student-login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StudentLoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StudentLoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StudentLoginPageRoutingModule } from './student-login-routing.module';\n\nimport { StudentLoginPage } from './student-login.page';\n\n// Required for Login Form to work\nimport {  ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StudentLoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [StudentLoginPage]\n})\nexport class StudentLoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3N0dWRlbnQtbG9naW4vc3R1ZGVudC1sb2dpbi5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { StudentService } from '../../services/student.service';\n\n@Component({\n  selector: 'app-student-login',\n  templateUrl: './student-login.page.html',\n  styleUrls: ['./student-login.page.scss'],\n})\nexport class StudentLoginPage implements OnInit {\n\n  credentialForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    private loginService: StudentService\n    ) \n    { }\n\n  ngOnInit() {\n    this.credentialForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  async signUp() {\n    const loading = await this.loadingController.create();\n    await loading.present();\n\n    this.loginService.signUp(this.credentialForm.value).then(user => {\n      loading.dismiss();\n      this.router.navigateByUrl('/', { replaceUrl: true })\n    }, async err => {\n      loading.dismiss();\n      const alert = await this.alertController.create({\n        header: 'Sign up failed',\n        message: err.message,\n        buttons: ['OK'],\n      });\n\n      await alert.present();\n    });\n  }\n\n  async signIn() {\n    const loading = await this.loadingController.create();\n    await loading.present();\n\n    this.loginService\n      .signIn(this.credentialForm.value)\n      .then(\n        (res) => {\n          loading.dismiss();\n          this.router.navigateByUrl('/', { replaceUrl: true });\n        },\n        async (err) => {\n          loading.dismiss();\n          const alert = await this.alertController.create({\n            header: ':(',\n            message: err.message,\n            buttons: ['OK'],\n          });\n\n          await alert.present();\n        }\n      );\n  }\n\n  // Easy access for form fields\n  get email() {\n    return this.credentialForm.get('email');\n  }\n\n  get password() {\n    return this.credentialForm.get('password');\n  }\n}"],"sourceRoot":"webpack:///"}