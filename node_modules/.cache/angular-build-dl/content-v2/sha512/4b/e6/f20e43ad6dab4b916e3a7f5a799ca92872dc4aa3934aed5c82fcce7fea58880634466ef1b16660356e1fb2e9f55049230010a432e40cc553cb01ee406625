{"version":3,"sources":["node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","node_modules/@ionic/core/dist/esm/haptic-ccbda579.js","node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","src/app/services/student.service.ts"],"names":[],"mappings":"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","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, DocumentReference} from '@angular/fire/firestore';\nimport { map, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport * as firebase from 'firebase/app';\nimport { AngularFireStorage } from \"@angular/fire/storage\";\n\n// Needed to create reference to cloud stotage and make url \nimport { AngularFireStorageReference } from '@angular/fire/storage';\nimport { from } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n//import { AngularFireAuthGuard} from '@angular/fire/auth-guard';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n\n// Modify interface to include imageURL (firebase URL),\n// imageFilename (needed for deleting the file from firebase)\n// and createdAt (timeStamp)\nexport interface Student{\n  studentID?: string,\n  firstName: string,\n  lastName: string,\n  moduleNo1: string,\n  moduleNo2: string,\n  courseID: string,\n  imageURL: string,\n  imageFilename: string,\n  createdBy: string,\n  createdAt?: firebase.firestore.FieldValue;\n}\n\n// Interafce for Login\nexport interface User{\n  uid:string,\n  email: String\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  // Reference to students Observable\n  private students: Observable<Student[]>;\n  // Reference to the studentCollection for Update/Delete Operations\n  private studentCollection: AngularFirestoreCollection<Student>;\n  // Current Logged in User\n  currentUser: User = null;\n\n \n  constructor(private storage: AngularFireStorage, private afs: AngularFirestore, private afAuth: AngularFireAuth) {\n    // Get a refence to the students collection\n    this.studentCollection = this.afs.collection<Student>('students-3');\n    // Could do this also to filter data based on the CreatedBy ID\n    //this.studentCollection = this.afs.collection<Student>('students-3', ref => ref.where(\"createdBy\", \"==\", `${this.currentUser.uid}`));\n    \n    // Get a refernce to a snapshot of the student collection data, i.e an observable that\n    // provides the actual array of students when subscribed to (emits the values!)\n    this.students = this.studentCollection.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const studentID = a.payload.doc.id;\n          // Use spread operator (...) to include studentID\n          // in the returned data object\n          return { studentID, ...data };\n        });\n      })\n    );\n\n    // Check Login Status\n    this.afAuth.onAuthStateChanged(user => {\n      console.log(\"user changed:\", user);\n      this.currentUser = user;\n    });\n  }\n \n  // Get all students from service\n  getStudents(): Observable<Student[]> {\n    return this.students;\n  }\n \n  // This studentID refers to the id in Firebase, needed to update or delete\n  getStudent(studentID: string): Observable<Student> {\n    return this.studentCollection.doc<Student>(studentID).valueChanges().pipe(\n      take(1),\n      map(student => {\n        student.studentID = studentID;\n        return student\n      })\n    );\n  }\n \n  // addStudent(student: Student): Promise<DocumentReference> {\n  //   return this.studentCollection.add(student);\n  // }\n\n\n    addStudent(student: Student) {\n\n    // Name for image captured. This uses template literals to embed the date \n    // and use the text and append it to Dummy. Ensure to use ` instead of '\n    // to ensure it works. We will also add the imageFilename for deletion purposes\n    let imageFilename = `${new Date().getTime()}-ProfilePic.png`;\n    //let storageRef: AngularFireStorageReference = this.storage.ref(`/students/${imageFilename}`);\n    let storageRef = firebase.storage().ref(`/students/${imageFilename}`);\n\n    console.log(\"StorageRef\" + storageRef);\n    console.log(\"ImageFileName\" + imageFilename);\n\n    // Upload the raw base64 encoded string to storage using putString\n    const storageObs = from(storageRef.putString(student.imageURL, \"base64\", { contentType: 'image/png' }));\n\n    // Generate a URL for storing in the FireStore. This is used to display the image going forward\n    // This code creates an Observable which is then converted into a promise in order to extract\n    // the URL and then store it in the Firsestore imageURL field.\n    return storageObs.pipe(\n      switchMap(obj => {\n        console.log(\"Got File Download URL Promise\");\n        return obj.ref.getDownloadURL();\n      }),\n      switchMap(url => {\n        console.log(\"Got File Download URL\");\n        // Update student object with url, timetamp, imagefilename (for deletion) and creator (for filtering from DB, not done yet)\n        student.imageURL = url;\n        student.createdAt = firebase.firestore.FieldValue.serverTimestamp();\n        student.imageFilename = imageFilename;\n        student.createdBy = this.currentUser.uid;\n        return this.studentCollection.add(student);\n      })\n    )\n  }\n\n  // updateStudent(student: Student): Promise<void> {\n  //   return this.studentCollection.doc(student.studentID).update({ firstName: student.firstName, lastName: student.lastName, moduleNo1: student.moduleNo1, moduleNo2: student.moduleNo2, courseID: student.courseID });\n  // }\n\n  updateStudent(student: Student) {\n\n    // Name for New updated image captured. This uses template literals to embed the date \n    // and use the text and append it to Dummy. Ensure to use ` instead of '\n    // to ensure it works\n    let imageFilename = `${new Date().getTime()}-UpdatedProfilePic.png`;\n    \n    // Get a storage reference for the new file that will be uploaded in place of\n    // the existing one. We will replace the old one and delete it\n    let storageRef = firebase.storage().ref(`/students/${imageFilename}`);\n\n    // Delete old file from File Storage\n    this.deleteFile(student.imageFilename);\n\n    // Generate a URL for storing in the FireStore. This is used to display the image going forward\n    // This code creates an Observable which is then converted into a promise in order to extract\n    // the URL and then store it in the Firsestore imageURL field. \n    const storageObs = from(storageRef.putString(student.imageURL, \"base64\", { contentType: 'image/png' }));\n\n    return storageObs.pipe(\n      switchMap(obj => {\n        console.log(\"Got File Download URL Promise\");\n        return obj.ref.getDownloadURL();\n      }),\n      switchMap(url => {\n        console.log(\"Got File Download URL\");\n        student.imageURL = url;\n        student.createdAt = firebase.firestore.FieldValue.serverTimestamp();\n        student.imageFilename = imageFilename;\n        return this.studentCollection.doc(student.studentID).update(student);\n      })\n    )\n  }\n\n  \n \n  deleteStudent(student: Student): Promise<void> {\n\n    // Delete the file in Firebase Storage First\n    this.deleteFile(student.imageFilename);\n\n    // Delete record from Firebase Firestore using studentID\n    return this.studentCollection.doc(student.studentID).delete();\n\n  }\n\n  // Method for deleting a file from Firebase File Storage using\n  // the fileName from the FireStore record\n  deleteFile(fileName: string){\n\n    // Get a reference to file stored in the Firebase Storage bucket \n    //let storageRef = firebase.storage().ref().child(`students/${fileName}`);\n    let storageRef = firebase.storage().ref(`/students/${fileName}`);\n\n    // Delete the file\n    storageRef.delete().then(() => {\n      // File deleted successfully\n      console.log(\"File deleted successfully\");\n    }).catch((error) => {\n      // Uh-oh, an error occurred!\n      console.log(\"Error: File NOT deleted\");\n    });\n  }\n\n  // Sign-in method\n  signIn({email, password}){\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n\n  // Sign-out method\n  signOut() {\n    return this.afAuth.signOut();\n  }\n\n  // Signup for a new accounnt using Angular Fire Auth\n  async signUp({email, password}){\n\n    // Create a user using username and passsord\n    const credential  = await this.afAuth.createUserWithEmailAndPassword(email, password);\n\n    // Collect user ID for storage\n    const uid = credential.user.uid;\n    // Store is Firsetore\n    return this.afs.doc(`users/${uid}`).set({uid, email: credential.user.email})\n\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}