{"version":3,"sources":["./src/app/pages/student-details/student-details.page.html","./src/app/pages/student-details/student-details-routing.module.ts","./src/app/pages/student-details/student-details.module.ts","./src/app/pages/student-details/student-details.page.scss","./src/app/pages/student-details/student-details.page.ts"],"names":[],"mappings":"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","file":"pages-student-details-student-details-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Student Details</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">First Name</ion-label>\\n    <ion-input [(ngModel)]=\\\"student.firstName\\\"></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">Last Name</ion-label>\\n    <ion-textarea [(ngModel)]=\\\"student.lastName\\\" rows=\\\"2\\\"></ion-textarea>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">Module No1</ion-label>\\n    <ion-textarea [(ngModel)]=\\\"student.moduleNo1\\\" rows=\\\"2\\\"></ion-textarea>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">Module No2</ion-label>\\n    <ion-textarea [(ngModel)]=\\\"student.moduleNo2\\\" rows=\\\"2\\\"></ion-textarea>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">Course ID</ion-label>\\n    <ion-textarea [(ngModel)]=\\\"student.courseID\\\" rows=\\\"2\\\"></ion-textarea>\\n  </ion-item>\\n</ion-content>\\n <!-- Only show Add Student button if no student ID\\n has been passed, otherwise its being used to update/delete -->\\n<ion-footer *ngIf=\\\"!student.studentID\\\">\\n  <ion-toolbar color=\\\"success\\\">\\n    <ion-button expand=\\\"full\\\" fill=\\\"clear\\\" color=\\\"light\\\" (click)=\\\"addStudent()\\\">\\n      <ion-icon name=\\\"checkmark\\\" slot=\\\"start\\\"></ion-icon>\\n      Add Student\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n <!-- Show these buttons if a studentID has been passed with the router. If there \\n is a studentID it means that the page is being used to update/delete a student -->\\n<ion-footer *ngIf=\\\"student.studentID\\\">\\n  <ion-row no-padding text-center>\\n    <ion-col size=\\\"6\\\">\\n      <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" color=\\\"danger\\\" (click)=\\\"deleteStudent()\\\">\\n        <ion-icon name=\\\"trash\\\" slot=\\\"start\\\"></ion-icon>\\n        Delete\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"6\\\">\\n      <ion-button expand=\\\"block\\\" fill=\\\"solid\\\" color=\\\"success\\\" (click)=\\\"updateStudent()\\\">\\n        <ion-icon name=\\\"save\\\" slot=\\\"start\\\"></ion-icon>\\n        Update\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StudentDetailsPage } from './student-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StudentDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StudentDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StudentDetailsPageRoutingModule } from './student-details-routing.module';\n\nimport { StudentDetailsPage } from './student-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StudentDetailsPageRoutingModule\n  ],\n  declarations: [StudentDetailsPage]\n})\nexport class StudentDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3N0dWRlbnQtZGV0YWlscy9zdHVkZW50LWRldGFpbHMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { StudentService, Student } from 'src/app/services/student.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController} from '@ionic/angular';\n\n@Component({\n  selector: 'app-student-details',\n  templateUrl: './student-details.page.html',\n  styleUrls: ['./student-details.page.scss'],\n})\nexport class StudentDetailsPage implements OnInit {\n  // Create empty student object to provide\n  // functions with data from the form\n  student: Student = {\n    firstName: '',\n    lastName: '',\n    moduleNo1: '',\n    moduleNo2: '',\n    courseID: ''\n  };\n \n  constructor(private activatedRoute: ActivatedRoute, private studentService: StudentService,\n    private toastCtrl: ToastController, private router: Router) { }\n \n  ngOnInit() { }\n \n  ionViewWillEnter() {\n    let studentID = this.activatedRoute.snapshot.paramMap.get('studentID');\n    console.log(studentID);\n    if (studentID) {\n      console.log(studentID);\n      this.studentService.getStudent(studentID).subscribe(student => {\n        this.student = student;\n      });\n    }\n  }\n \n  addStudent() {\n    this.studentService.addStudent(this.student).then(() => {\n      this.router.navigateByUrl('/');\n      this.showToast('Student added');\n    }, err => {\n      this.showToast('There was a problem adding your student :(');\n    });\n  }\n \n  deleteStudent() {\n    this.studentService.deleteStudent(this.student.studentID).then(() => {\n      this.router.navigateByUrl('/');\n      this.showToast('Student deleted');\n    }, err => {\n      this.showToast('There was a problem deleting your student :(');\n    });\n  }\n \n  updateStudent() {\n    this.studentService.updateStudent(this.student).then(() => {\n      this.showToast('Student updated');\n    }, err => {\n      this.showToast('There was a problem updating your student :(');\n    });\n  }\n \n  showToast(msg) {\n    this.toastCtrl.create({\n      message: msg,\n      duration: 2000\n    }).then(toast => toast.present());\n  }\n}"],"sourceRoot":"webpack:///"}